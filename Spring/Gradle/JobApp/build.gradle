plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '6.2.0.5505'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.8'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.18.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', 'squ_333cb73fc13de9d52eb862d9da928958ebb3c7be'
        property "sonar.projectKey", "JobApp"
        property "sonar.projectName", "JobApp"
    }
}

jacocoTestReport {
    reports {
        html.required = true
        xml.required = true
        xml.destination file("${project.buildDir}/reports/tests/jacocoTestReport.xml")
    }
}
